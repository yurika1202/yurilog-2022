@use "../../functions/" as *;
@use "../../variables/" as var;
@use "../../mixins/" as mix;

// copyBox
// --------------------------------------------------------------------------
.bl_contactCopyBox {
    width: 100%;
    max-width: 480px;
    margin: 52px auto 0;
    padding: 28px 16px 24px;
    border: 2px solid colors(color-contact-copyBox);
    border-radius: 10px;
    position: relative;

    @include mix.mq(md) {
        padding: 36px 24px 24px;
    }
}

.bl_contactCopyBox_copyBtnWrap {
    position: absolute;
    top: -20px;
    right: 14px;

    input {
        width: 0;
        opacity: 0;
        visibility: hidden;
    }
}

.bl_contactCopyBox_list {
    margin-top: 16px;
}

.bl_contactCopyBox_item {
    list-style: decimal;
    margin-left: 16px;
    padding-left: 8px;

    &:not(:first-of-type) {
        margin-top: 8px;
    }

    &::marker {
        font-family: font-family(font-accent);
        font-weight: 700;
    }
}


// form 共通
// --------------------------------------------------------------------------
.bl_form {
    width: 100%;
    max-width: 720px;
    margin: 56px auto 0;

    input, textarea {
        border: 1px solid colors(color-contact-input);
        border-radius: 10px;
        padding: 8px 16px;
        width: 100%;
        transition: box-shadow .3s ease-in-out;

        @include mix.hover() {
            outline: none;
            box-shadow: 0 0 10px colors(color-contact-inputShadow);
        }
    }

    textarea {
        resize: none;
        height: 160px;
    }

    input[type="radio"], input[type="checkbox"] {
        &:focus + span {
            &::before {
                box-shadow: 0 0 10px colors(color-contact-inputShadow);
            }
        }

        + span {
            &::before {
                transition: box-shadow .3s ease-in-out;
            }

            @include mix.hover() {
                &::before {
                    box-shadow: 0 0 10px colors(color-contact-inputShadow);
                }
            }
        }
    }
}

.bl_form_item {
    &:not(:first-of-type) {
        margin-top: 40px;
    }

    &__center {
        text-align: center;
    }
}

.bl_form_label {
    font-weight: 700;

    &__require {
        display: inline-block;
        font-weight: 700;
        padding-right: 72px;
        position: relative;

        &::before {
            content: '必須';
            padding: 4px 16px;
            font-size: rem(12px);
            font-weight: 700;
            color: colors(color-global-white);
            background: colors(color-global-accent);
            border-radius: 30px;
            position: absolute;
            top: 50%;
            right: 0;
            transform: translateY(-50%);
        }
    }
}

.bl_form_subLabel {
    font-size: rem(14px);
    margin: 8px 8px 0 0;
    flex-shrink: 0;
}

.bl_form_2colInput {
    @include mix.mq(md) {
        display: flex;
        gap: 16px;
    }
}

.bl_form_inputField {
    &:first-of-type {
        margin-top: 16px;
    }

    &:not(:first-of-type) {
        margin-top: 8px;
    }

    &__2col {
        display: flex;
    }

    @include mix.mq(md) {
        flex-grow: 1;

        &:not(:first-of-type) {
            margin-top: 16px;
        }    
    }
}

.bl_form_inputWrap {
    width: 100%;
}

.bl_form_exText {
    font-size: rem(12px);
    padding-left: 1.8em;
    margin: 8px 0 0 16px;
    position: relative;

    &::before {
        content: '例：';
        font-size: rem(12px);
        position: absolute;
        top: 50%;
        left: 0;
        transform: translateY(-50%);
    }
}

.bl_form_errorText {
    max-height: 0;
    opacity: 0;
    margin: 8px 0 12px;
    font-size: rem(12px);
    font-weight: 700;
    padding-left: 24px;
    position: relative;
    transition: all .5s ease;

    &::before {
        content: "";
        width: 16px;
        height: 16px;
        background: colors(color-contact-error);
        mask: url(#{var.$img-path}caution.svg) no-repeat center / contain;
        position: absolute;
        top: 50%;
        left: 0;
        transform: translateY(-50%);
    }

    &.is_display {
        max-height: 2em;
        opacity: 1;
    }
}


// form ラジオボタン
// --------------------------------------------------------------------------
.bl_form_radioList {
    li {
        &:not(:first-of-type) {
            margin-top: 12px;
        }
    }

    @include mix.mq(md) {
        display: flex;
        gap: 40px;

        li {
            &:not(:first-of-type) {
                margin-top: 0;
            }
        }    
    }
}

input[type="radio"] {
	width: auto;
	opacity: 0;
	position: absolute;

    /* クリック範囲 */
    + span {
        display: inline-block;
        padding-left: 32px;
        position: relative;
        cursor: pointer;  
        
        /* ラジオボタンスタイル */
        &::before {
            content: '';
            width: 25px;
            height: 25px;
            border: 1px solid colors(color-contact-input);
            border-radius: 50%;
            padding: 0;        
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);
        }

        /* ラジオボタンチェックマーク(未選択時) */
        &::after {
            content: '';
            display: block;
            width: 15px;
            height: 15px;
            border-radius: 50%;
            background: colors(color-contact-input);
            position: absolute;
            top: 50%;
            left: 5px;
            transform: translateY(-50%) scale(0);    
            opacity: 0;
            transition: opacity .3s ease, transform .3s ease;
        }
    }
}

/* ラジオボタンチェックマーク(選択時) */
input[type="radio"]:checked {
    & + span {
        &::after {
            opacity: 1;
            transform: translateY(-50%) scale(1);    
        }
    }
}
        

// form プライバシーポリシー
// --------------------------------------------------------------------------
.bl_form_privacyBox {
    border: 1px solid colors(color-contact-input);
    border-radius: 10px;
    padding: 24px 16px;
    height: 256px;
    overflow-y: scroll;

    span {
        display: inline-block;
        width: 1em;
        height: 1em;
    }
}

.bl_form_privacyTitle {
    font-size: rem(18px);
    font-weight: 700;
    text-align: center;

    @include mix.mq(lg) {
        font-size: rem(20px);
    }
}

.bl_form_privacyLead {
    margin-top: 24px;
}

.bl_form_privacySubTitle {
    font-weight: 700;
    margin-top: 1em;
}

.bl_form_privacyList {
    li {
        list-style: disc inside;
    }
}

/* チェックボックス */
input[type="checkbox"] {
	width: auto;
	opacity: 0;
	position: absolute;

    + span {
        display: inline-block;
        text-align: left;
        position: relative;
        padding-left: 40px;
        cursor: pointer;  

        /* チェックボックススタイル */
        &::before {
            content: '';
            width: 25px;
            height: 25px;
            border: 1px solid colors(color-contact-input);
            border-radius: 5px;
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(-50%);        
        }

        /* チェックボックス未選択時 */
        &::after {
            content: '';
            display: block;
            width: 16px;
            height: 9px;
            border-top: 3px solid colors(color-contact-input);
            border-right: 3px solid colors(color-contact-input);
            position: absolute;
            top: 22px;
            left: 4px;
            opacity: 0;
            transform: rotate(135deg) scale(0);
            transition: opacity .3s ease, transform .3s ease;
        }

        @include mix.mq(sm) {
            &::after {
                top: 8px;
            }
        }
    }
}

/* チェックボックス選択時 */
input[type="checkbox"]:checked {
    + span {
        &::after {
            opacity: 1;
            transform: rotate(135deg) scale(1);
        }
    }
}
